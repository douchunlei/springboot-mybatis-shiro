<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.seits.modules.business.bp.dao.crud.overtimeRecordMapper.OvertimeRecordMapper" >
  <resultMap id="BaseResultMap" type="cn.seits.modules.business.bp.model.overtimeRecord.OvertimeRecord" >
    <id column="OVERTIMERECORD_ID" property="overtimerecordId" jdbcType="VARCHAR" />
    <result column="WORK_ID" property="workId" jdbcType="VARCHAR" />
    <result column="APPLYOVERTIMEEMPLOYEE_ID" property="applyovertimeemployeeId" jdbcType="VARCHAR" />
    <result column="CHECKEMPLOYEE_ID" property="checkemployeeId" jdbcType="VARCHAR" />
    <result column="OVERTIMETIME_ID" property="overtimetimeId" jdbcType="VARCHAR" />
    <result column="OVERTIME_TIME" property="overtimeTime" jdbcType="TIMESTAMP" />
    <result column="OVERTIME_REASON" property="overtimeReason" jdbcType="VARCHAR" />
    <result column="IS_HOLIDAY" property="isHoliday" jdbcType="CHAR" />
    <result column="IS_REALITY" property="isReality" jdbcType="CHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    OVERTIMERECORD_ID, WORK_ID, APPLYOVERTIMEEMPLOYEE_ID, CHECKEMPLOYEE_ID, OVERTIMETIME_ID, 
    OVERTIME_TIME, OVERTIME_REASON, IS_HOLIDAY, IS_REALITY, CREATE_TIME, UPDATE_TIME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.seits.modules.business.bp.model.overtimeRecord.OvertimeRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from PMS_CM_OVERTIMERECORD
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="cn.seits.modules.business.bp.model.overtimeRecord.OvertimeRecordKey" >
    select 
    <include refid="Base_Column_List" />
    from PMS_CM_OVERTIMERECORD
    where OVERTIMERECORD_ID = #{overtimerecordId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="cn.seits.modules.business.bp.model.overtimeRecord.OvertimeRecordKey" >
    delete from PMS_CM_OVERTIMERECORD
    where OVERTIMERECORD_ID = #{overtimerecordId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.seits.modules.business.bp.model.overtimeRecord.OvertimeRecordExample" >
    delete from PMS_CM_OVERTIMERECORD
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.seits.modules.business.bp.model.overtimeRecord.OvertimeRecord" >
    insert into PMS_CM_OVERTIMERECORD (OVERTIMERECORD_ID, WORK_ID, APPLYOVERTIMEEMPLOYEE_ID, 
      CHECKEMPLOYEE_ID, OVERTIMETIME_ID, OVERTIME_TIME, 
      OVERTIME_REASON, IS_HOLIDAY, IS_REALITY, 
      CREATE_TIME, UPDATE_TIME)
    values (#{overtimerecordId,jdbcType=VARCHAR}, #{workId,jdbcType=VARCHAR}, #{applyovertimeemployeeId,jdbcType=VARCHAR}, 
      #{checkemployeeId,jdbcType=VARCHAR}, #{overtimetimeId,jdbcType=VARCHAR}, #{overtimeTime,jdbcType=TIMESTAMP}, 
      #{overtimeReason,jdbcType=VARCHAR}, #{isHoliday,jdbcType=CHAR}, #{isReality,jdbcType=CHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.seits.modules.business.bp.model.overtimeRecord.OvertimeRecord" >
    insert into PMS_CM_OVERTIMERECORD
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="overtimerecordId != null" >
        OVERTIMERECORD_ID,
      </if>
      <if test="workId != null" >
        WORK_ID,
      </if>
      <if test="applyovertimeemployeeId != null" >
        APPLYOVERTIMEEMPLOYEE_ID,
      </if>
      <if test="checkemployeeId != null" >
        CHECKEMPLOYEE_ID,
      </if>
      <if test="overtimetimeId != null" >
        OVERTIMETIME_ID,
      </if>
      <if test="overtimeTime != null" >
        OVERTIME_TIME,
      </if>
      <if test="overtimeReason != null" >
        OVERTIME_REASON,
      </if>
      <if test="isHoliday != null" >
        IS_HOLIDAY,
      </if>
      <if test="isReality != null" >
        IS_REALITY,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="overtimerecordId != null" >
        #{overtimerecordId,jdbcType=VARCHAR},
      </if>
      <if test="workId != null" >
        #{workId,jdbcType=VARCHAR},
      </if>
      <if test="applyovertimeemployeeId != null" >
        #{applyovertimeemployeeId,jdbcType=VARCHAR},
      </if>
      <if test="checkemployeeId != null" >
        #{checkemployeeId,jdbcType=VARCHAR},
      </if>
      <if test="overtimetimeId != null" >
        #{overtimetimeId,jdbcType=VARCHAR},
      </if>
      <if test="overtimeTime != null" >
        #{overtimeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="overtimeReason != null" >
        #{overtimeReason,jdbcType=VARCHAR},
      </if>
      <if test="isHoliday != null" >
        #{isHoliday,jdbcType=CHAR},
      </if>
      <if test="isReality != null" >
        #{isReality,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.seits.modules.business.bp.model.overtimeRecord.OvertimeRecordExample" resultType="java.lang.Integer" >
    select count(*) from PMS_CM_OVERTIMERECORD
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update PMS_CM_OVERTIMERECORD
    <set >
      <if test="record.overtimerecordId != null" >
        OVERTIMERECORD_ID = #{record.overtimerecordId,jdbcType=VARCHAR},
      </if>
      <if test="record.workId != null" >
        WORK_ID = #{record.workId,jdbcType=VARCHAR},
      </if>
      <if test="record.applyovertimeemployeeId != null" >
        APPLYOVERTIMEEMPLOYEE_ID = #{record.applyovertimeemployeeId,jdbcType=VARCHAR},
      </if>
      <if test="record.checkemployeeId != null" >
        CHECKEMPLOYEE_ID = #{record.checkemployeeId,jdbcType=VARCHAR},
      </if>
      <if test="record.overtimetimeId != null" >
        OVERTIMETIME_ID = #{record.overtimetimeId,jdbcType=VARCHAR},
      </if>
      <if test="record.overtimeTime != null" >
        OVERTIME_TIME = #{record.overtimeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.overtimeReason != null" >
        OVERTIME_REASON = #{record.overtimeReason,jdbcType=VARCHAR},
      </if>
      <if test="record.isHoliday != null" >
        IS_HOLIDAY = #{record.isHoliday,jdbcType=CHAR},
      </if>
      <if test="record.isReality != null" >
        IS_REALITY = #{record.isReality,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update PMS_CM_OVERTIMERECORD
    set OVERTIMERECORD_ID = #{record.overtimerecordId,jdbcType=VARCHAR},
      WORK_ID = #{record.workId,jdbcType=VARCHAR},
      APPLYOVERTIMEEMPLOYEE_ID = #{record.applyovertimeemployeeId,jdbcType=VARCHAR},
      CHECKEMPLOYEE_ID = #{record.checkemployeeId,jdbcType=VARCHAR},
      OVERTIMETIME_ID = #{record.overtimetimeId,jdbcType=VARCHAR},
      OVERTIME_TIME = #{record.overtimeTime,jdbcType=TIMESTAMP},
      OVERTIME_REASON = #{record.overtimeReason,jdbcType=VARCHAR},
      IS_HOLIDAY = #{record.isHoliday,jdbcType=CHAR},
      IS_REALITY = #{record.isReality,jdbcType=CHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.seits.modules.business.bp.model.overtimeRecord.OvertimeRecord" >
    update PMS_CM_OVERTIMERECORD
    <set >
      <if test="workId != null" >
        WORK_ID = #{workId,jdbcType=VARCHAR},
      </if>
      <if test="applyovertimeemployeeId != null" >
        APPLYOVERTIMEEMPLOYEE_ID = #{applyovertimeemployeeId,jdbcType=VARCHAR},
      </if>
      <if test="checkemployeeId != null" >
        CHECKEMPLOYEE_ID = #{checkemployeeId,jdbcType=VARCHAR},
      </if>
      <if test="overtimetimeId != null" >
        OVERTIMETIME_ID = #{overtimetimeId,jdbcType=VARCHAR},
      </if>
      <if test="overtimeTime != null" >
        OVERTIME_TIME = #{overtimeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="overtimeReason != null" >
        OVERTIME_REASON = #{overtimeReason,jdbcType=VARCHAR},
      </if>
      <if test="isHoliday != null" >
        IS_HOLIDAY = #{isHoliday,jdbcType=CHAR},
      </if>
      <if test="isReality != null" >
        IS_REALITY = #{isReality,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where OVERTIMERECORD_ID = #{overtimerecordId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.seits.modules.business.bp.model.overtimeRecord.OvertimeRecord" >
    update PMS_CM_OVERTIMERECORD
    set WORK_ID = #{workId,jdbcType=VARCHAR},
      APPLYOVERTIMEEMPLOYEE_ID = #{applyovertimeemployeeId,jdbcType=VARCHAR},
      CHECKEMPLOYEE_ID = #{checkemployeeId,jdbcType=VARCHAR},
      OVERTIMETIME_ID = #{overtimetimeId,jdbcType=VARCHAR},
      OVERTIME_TIME = #{overtimeTime,jdbcType=TIMESTAMP},
      OVERTIME_REASON = #{overtimeReason,jdbcType=VARCHAR},
      IS_HOLIDAY = #{isHoliday,jdbcType=CHAR},
      IS_REALITY = #{isReality,jdbcType=CHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where OVERTIMERECORD_ID = #{overtimerecordId,jdbcType=VARCHAR}
  </update>
</mapper>