<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.seits.modules.business.bp.dao.crud.workTaskMapper.WorkTaskMapper" >
  <resultMap id="BaseResultMap" type="cn.seits.modules.business.bp.model.workTask.WorkTask" >
    <id column="WORK_ID" property="workId" jdbcType="VARCHAR" />
    <result column="WORK_NAME" property="workName" jdbcType="VARCHAR" />
    <result column="EMPLOYEE_ID" property="employeeId" jdbcType="VARCHAR" />
    <result column="WORK_PLAN_ID" property="workPlanId" jdbcType="VARCHAR" />
    <result column="PROJECT_ID" property="projectId" jdbcType="VARCHAR" />
    <result column="MODULE_ID" property="moduleId" jdbcType="VARCHAR" />
    <result column="PAGE_ID" property="pageId" jdbcType="VARCHAR" />
    <result column="FUNCTION_ID" property="functionId" jdbcType="VARCHAR" />
    <result column="WORK_ENACT_TIME" property="workEnactTime" jdbcType="TIMESTAMP" />
    <result column="WORK_START_TIME" property="workStartTime" jdbcType="TIMESTAMP" />
    <result column="WORK_CONTENT" property="workContent" jdbcType="VARCHAR" />
    <result column="WORK_COMPLETE_TIME" property="workCompleteTime" jdbcType="TIMESTAMP" />
    <result column="PROJECT_PROGRESS" property="projectProgress" jdbcType="VARCHAR" />
    <result column="RISK_EVAL_ID" property="riskEvalId" jdbcType="VARCHAR" />
    <result column="IS_OVERDUE" property="isOverdue" jdbcType="CHAR" />
    <result column="OVERDUE_REASON" property="overdueReason" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    WORK_ID, WORK_NAME, EMPLOYEE_ID, WORK_PLAN_ID, PROJECT_ID, MODULE_ID, PAGE_ID, FUNCTION_ID, 
    WORK_ENACT_TIME, WORK_START_TIME, WORK_CONTENT, WORK_COMPLETE_TIME, PROJECT_PROGRESS, 
    RISK_EVAL_ID, IS_OVERDUE, OVERDUE_REASON, CREATE_TIME, UPDATE_TIME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.seits.modules.business.bp.model.workTask.WorkTaskExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from PMS_CM_WORKTASK
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="cn.seits.modules.business.bp.model.workTask.WorkTaskKey" >
    select 
    <include refid="Base_Column_List" />
    from PMS_CM_WORKTASK
    where WORK_ID = #{workId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="cn.seits.modules.business.bp.model.workTask.WorkTaskKey" >
    delete from PMS_CM_WORKTASK
    where WORK_ID = #{workId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.seits.modules.business.bp.model.workTask.WorkTaskExample" >
    delete from PMS_CM_WORKTASK
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.seits.modules.business.bp.model.workTask.WorkTask" >
    insert into PMS_CM_WORKTASK (WORK_ID, WORK_NAME, EMPLOYEE_ID, 
      WORK_PLAN_ID, PROJECT_ID, MODULE_ID, 
      PAGE_ID, FUNCTION_ID, WORK_ENACT_TIME, 
      WORK_START_TIME, WORK_CONTENT, WORK_COMPLETE_TIME, 
      PROJECT_PROGRESS, RISK_EVAL_ID, IS_OVERDUE, 
      OVERDUE_REASON, CREATE_TIME, UPDATE_TIME
      )
    values (#{workId,jdbcType=VARCHAR}, #{workName,jdbcType=VARCHAR}, #{employeeId,jdbcType=VARCHAR}, 
      #{workPlanId,jdbcType=VARCHAR}, #{projectId,jdbcType=VARCHAR}, #{moduleId,jdbcType=VARCHAR}, 
      #{pageId,jdbcType=VARCHAR}, #{functionId,jdbcType=VARCHAR}, #{workEnactTime,jdbcType=TIMESTAMP}, 
      #{workStartTime,jdbcType=TIMESTAMP}, #{workContent,jdbcType=VARCHAR}, #{workCompleteTime,jdbcType=TIMESTAMP}, 
      #{projectProgress,jdbcType=VARCHAR}, #{riskEvalId,jdbcType=VARCHAR}, #{isOverdue,jdbcType=CHAR}, 
      #{overdueReason,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.seits.modules.business.bp.model.workTask.WorkTask" >
    insert into PMS_CM_WORKTASK
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="workId != null" >
        WORK_ID,
      </if>
      <if test="workName != null" >
        WORK_NAME,
      </if>
      <if test="employeeId != null" >
        EMPLOYEE_ID,
      </if>
      <if test="workPlanId != null" >
        WORK_PLAN_ID,
      </if>
      <if test="projectId != null" >
        PROJECT_ID,
      </if>
      <if test="moduleId != null" >
        MODULE_ID,
      </if>
      <if test="pageId != null" >
        PAGE_ID,
      </if>
      <if test="functionId != null" >
        FUNCTION_ID,
      </if>
      <if test="workEnactTime != null" >
        WORK_ENACT_TIME,
      </if>
      <if test="workStartTime != null" >
        WORK_START_TIME,
      </if>
      <if test="workContent != null" >
        WORK_CONTENT,
      </if>
      <if test="workCompleteTime != null" >
        WORK_COMPLETE_TIME,
      </if>
      <if test="projectProgress != null" >
        PROJECT_PROGRESS,
      </if>
      <if test="riskEvalId != null" >
        RISK_EVAL_ID,
      </if>
      <if test="isOverdue != null" >
        IS_OVERDUE,
      </if>
      <if test="overdueReason != null" >
        OVERDUE_REASON,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="workId != null" >
        #{workId,jdbcType=VARCHAR},
      </if>
      <if test="workName != null" >
        #{workName,jdbcType=VARCHAR},
      </if>
      <if test="employeeId != null" >
        #{employeeId,jdbcType=VARCHAR},
      </if>
      <if test="workPlanId != null" >
        #{workPlanId,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="moduleId != null" >
        #{moduleId,jdbcType=VARCHAR},
      </if>
      <if test="pageId != null" >
        #{pageId,jdbcType=VARCHAR},
      </if>
      <if test="functionId != null" >
        #{functionId,jdbcType=VARCHAR},
      </if>
      <if test="workEnactTime != null" >
        #{workEnactTime,jdbcType=TIMESTAMP},
      </if>
      <if test="workStartTime != null" >
        #{workStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="workContent != null" >
        #{workContent,jdbcType=VARCHAR},
      </if>
      <if test="workCompleteTime != null" >
        #{workCompleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="projectProgress != null" >
        #{projectProgress,jdbcType=VARCHAR},
      </if>
      <if test="riskEvalId != null" >
        #{riskEvalId,jdbcType=VARCHAR},
      </if>
      <if test="isOverdue != null" >
        #{isOverdue,jdbcType=CHAR},
      </if>
      <if test="overdueReason != null" >
        #{overdueReason,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.seits.modules.business.bp.model.workTask.WorkTaskExample" resultType="java.lang.Integer" >
    select count(*) from PMS_CM_WORKTASK
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update PMS_CM_WORKTASK
    <set >
      <if test="record.workId != null" >
        WORK_ID = #{record.workId,jdbcType=VARCHAR},
      </if>
      <if test="record.workName != null" >
        WORK_NAME = #{record.workName,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeId != null" >
        EMPLOYEE_ID = #{record.employeeId,jdbcType=VARCHAR},
      </if>
      <if test="record.workPlanId != null" >
        WORK_PLAN_ID = #{record.workPlanId,jdbcType=VARCHAR},
      </if>
      <if test="record.projectId != null" >
        PROJECT_ID = #{record.projectId,jdbcType=VARCHAR},
      </if>
      <if test="record.moduleId != null" >
        MODULE_ID = #{record.moduleId,jdbcType=VARCHAR},
      </if>
      <if test="record.pageId != null" >
        PAGE_ID = #{record.pageId,jdbcType=VARCHAR},
      </if>
      <if test="record.functionId != null" >
        FUNCTION_ID = #{record.functionId,jdbcType=VARCHAR},
      </if>
      <if test="record.workEnactTime != null" >
        WORK_ENACT_TIME = #{record.workEnactTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.workStartTime != null" >
        WORK_START_TIME = #{record.workStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.workContent != null" >
        WORK_CONTENT = #{record.workContent,jdbcType=VARCHAR},
      </if>
      <if test="record.workCompleteTime != null" >
        WORK_COMPLETE_TIME = #{record.workCompleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.projectProgress != null" >
        PROJECT_PROGRESS = #{record.projectProgress,jdbcType=VARCHAR},
      </if>
      <if test="record.riskEvalId != null" >
        RISK_EVAL_ID = #{record.riskEvalId,jdbcType=VARCHAR},
      </if>
      <if test="record.isOverdue != null" >
        IS_OVERDUE = #{record.isOverdue,jdbcType=CHAR},
      </if>
      <if test="record.overdueReason != null" >
        OVERDUE_REASON = #{record.overdueReason,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update PMS_CM_WORKTASK
    set WORK_ID = #{record.workId,jdbcType=VARCHAR},
      WORK_NAME = #{record.workName,jdbcType=VARCHAR},
      EMPLOYEE_ID = #{record.employeeId,jdbcType=VARCHAR},
      WORK_PLAN_ID = #{record.workPlanId,jdbcType=VARCHAR},
      PROJECT_ID = #{record.projectId,jdbcType=VARCHAR},
      MODULE_ID = #{record.moduleId,jdbcType=VARCHAR},
      PAGE_ID = #{record.pageId,jdbcType=VARCHAR},
      FUNCTION_ID = #{record.functionId,jdbcType=VARCHAR},
      WORK_ENACT_TIME = #{record.workEnactTime,jdbcType=TIMESTAMP},
      WORK_START_TIME = #{record.workStartTime,jdbcType=TIMESTAMP},
      WORK_CONTENT = #{record.workContent,jdbcType=VARCHAR},
      WORK_COMPLETE_TIME = #{record.workCompleteTime,jdbcType=TIMESTAMP},
      PROJECT_PROGRESS = #{record.projectProgress,jdbcType=VARCHAR},
      RISK_EVAL_ID = #{record.riskEvalId,jdbcType=VARCHAR},
      IS_OVERDUE = #{record.isOverdue,jdbcType=CHAR},
      OVERDUE_REASON = #{record.overdueReason,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.seits.modules.business.bp.model.workTask.WorkTask" >
    update PMS_CM_WORKTASK
    <set >
      <if test="workName != null" >
        WORK_NAME = #{workName,jdbcType=VARCHAR},
      </if>
      <if test="employeeId != null" >
        EMPLOYEE_ID = #{employeeId,jdbcType=VARCHAR},
      </if>
      <if test="workPlanId != null" >
        WORK_PLAN_ID = #{workPlanId,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null" >
        PROJECT_ID = #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="moduleId != null" >
        MODULE_ID = #{moduleId,jdbcType=VARCHAR},
      </if>
      <if test="pageId != null" >
        PAGE_ID = #{pageId,jdbcType=VARCHAR},
      </if>
      <if test="functionId != null" >
        FUNCTION_ID = #{functionId,jdbcType=VARCHAR},
      </if>
      <if test="workEnactTime != null" >
        WORK_ENACT_TIME = #{workEnactTime,jdbcType=TIMESTAMP},
      </if>
      <if test="workStartTime != null" >
        WORK_START_TIME = #{workStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="workContent != null" >
        WORK_CONTENT = #{workContent,jdbcType=VARCHAR},
      </if>
      <if test="workCompleteTime != null" >
        WORK_COMPLETE_TIME = #{workCompleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="projectProgress != null" >
        PROJECT_PROGRESS = #{projectProgress,jdbcType=VARCHAR},
      </if>
      <if test="riskEvalId != null" >
        RISK_EVAL_ID = #{riskEvalId,jdbcType=VARCHAR},
      </if>
      <if test="isOverdue != null" >
        IS_OVERDUE = #{isOverdue,jdbcType=CHAR},
      </if>
      <if test="overdueReason != null" >
        OVERDUE_REASON = #{overdueReason,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where WORK_ID = #{workId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.seits.modules.business.bp.model.workTask.WorkTask" >
    update PMS_CM_WORKTASK
    set WORK_NAME = #{workName,jdbcType=VARCHAR},
      EMPLOYEE_ID = #{employeeId,jdbcType=VARCHAR},
      WORK_PLAN_ID = #{workPlanId,jdbcType=VARCHAR},
      PROJECT_ID = #{projectId,jdbcType=VARCHAR},
      MODULE_ID = #{moduleId,jdbcType=VARCHAR},
      PAGE_ID = #{pageId,jdbcType=VARCHAR},
      FUNCTION_ID = #{functionId,jdbcType=VARCHAR},
      WORK_ENACT_TIME = #{workEnactTime,jdbcType=TIMESTAMP},
      WORK_START_TIME = #{workStartTime,jdbcType=TIMESTAMP},
      WORK_CONTENT = #{workContent,jdbcType=VARCHAR},
      WORK_COMPLETE_TIME = #{workCompleteTime,jdbcType=TIMESTAMP},
      PROJECT_PROGRESS = #{projectProgress,jdbcType=VARCHAR},
      RISK_EVAL_ID = #{riskEvalId,jdbcType=VARCHAR},
      IS_OVERDUE = #{isOverdue,jdbcType=CHAR},
      OVERDUE_REASON = #{overdueReason,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where WORK_ID = #{workId,jdbcType=VARCHAR}
  </update>
</mapper>